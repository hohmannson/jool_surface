@Kopernicus:AFTER[KOPERNICUS]
{
	Body
	{
		name = JooI
		cbNameLater = Jool
		//name = Jool
		
		Template
		{
			name = Eve
			removeAllPQSMods = true
			removeOcean = True
		}		
		Properties
		{
			radius = 6000000
			geeASL = 0.800273295870079
			mass = 4.23321273059351E+24
			gravParameter = 282528004209995
			rotates = True
			rotationPeriod = 36000
			tidallyLocked = False
			initialRotation = 0
			inverseRotThresholdAltitude = 220000
			albedo = 0.52
			emissivity = 0.48
			coreTemperatureOffset = 80
			isHomeWorld = False
			timewarpAltitudeLimits = 0 200000 200000 200000 200000 300000 600000 1200000
			sphereOfInfluence = 2455985185.42347
			hillSphere = 4065824625.34358
			solarRotationPeriod = False
			navballSwitchRadiusMult = 0.06
			navballSwitchRadiusMultLow = 0.055
			nonExactThreshold = 0.05
			exactSearch = False
			useTheInName = False
			selectable = True
			RDVisibility = Visible
			maxZoom = 60000
			ScienceValues
			{
				landedDataValue = 30 // Science multiplier for landed science.
				splashedDataValue = 20 // Science multiplier for splashed down science.
				flyingLowDataValue = 12 // Science multiplier for flying low science.
				flyingHighDataValue = 9 // Science multiplier for flying high science.
				inSpaceLowDataValue = 7 // Science multiplier for in space low science.
				inSpaceHighDataValue = 6 // Science multiplier for in space high science.
				recoveryValue = 6
				flyingAltitudeThreshold = 120000 // Altitude when "flying at <body>" transitions from/to "from <body>'s upper atmosphere"
				spaceAltitudeThreshold = 4000000 // Altitude when "in space low" transitions from/to "in space high"
			}
			biomeMap = JoolSurface/PluginData/Jool_Biome.png
			Biomes
			{
				Biome
				{
					color = RGBA(178,252,255,255)
					name = North Pole
					value = 3
				}
				Biome
				{
					color = RGBA(255,216,0,255)
					name = Type A stripes
					value = 1
				}
				Biome
				{
					color = RGBA(0,255,255,255)
					name = Turbulence
					value = 2
				}
				Biome
				{
					color = RGBA(0,38,255,255)
					name = Type B stripes
					value = 1.5
				}
				Biome
				{
					color = RGBA(255,0,110,255)
					name = South Pole
					value = 3
				}
			}
			displayName = Jool
			description = Jool is particularly known for being a rather large, predominantly green planet. Kerbalkind has longed to visit the first gas giant in the home system ever since it was first spotted in the sky. Philosophers reason that the swirling titan must be a really nice place to visit, on account of its wholesome coloration.
		}
		Orbit
		{
			referenceBody = Sun
			color = #7F9E74
			inclination = 1.304
			eccentricity = 0.1180610661695
			semiMajorAxis = 68773560320 
			longitudeOfAscendingNode = 52
			argumentOfPeriapsis = 0
			meanAnomalyAtEpoch = 0
			epoch = 0
		}
		ScaledVersion
		{
			type = Atmospheric
			shininess = 0
			Material
			{
				color = 1,1,1,1
				specColor = 0,0,0,1
				shininess = 0.03
				texture = JoolSurface/PluginData/JoolMap.dds
				mainTexScale = 1,1
				mainTexOffset = 0,0
				normals = BUILTIN/cloud_normal
				bumpMapScale = 15,8
				bumpMapOffset = 0,0
				opacity = 1
				rimPower = 1
				rimBlend = 1.2
				rimColorRamp = JoolSurface/PluginData/Atmorim.png
				rimColorRampScale = 1,1
				rimColorRampOffset = 0,0
				Gradient
				{
					0.0 = #40783B
					0.1 = RGBA(0,0,0,0)
					1.0 = RGBA(0,0,0,0)
				}
			}
		}
		PQS
		{
			maxLevel = 8
			minLevel = 2
//			deactivateAltitude = 300000
//			fadeStart = 100000
//			fadeEnd = 250000
			deactivateAltitude = 175000
			fadeStart = 50000
			fadeEnd = 80000
			materialType = AtmosphericTriplanarZoomRotation
			allowFootprints = True
			Material
			{
				factor = 8
				factorBlendWidth = 0.05
				factorRotation = 135
				saturation = 1.2
				contrast = 1.1
				tintColor = 1,1,1,0
				specularColor = 0.188235298,0.188235298,0.188235298,1
				albedoBrightness = 0.7
				steepPower = 3
				steepTexStart = 500
				steepTexEnd = 1000000
				steepTex = BUILTIN/dresSteepDiffuse
				steepTexScale = 1,1
				steepTexOffset = 0,0
				steepBumpMap = BUILTIN/DresSteepNRM
				steepBumpMapScale = 1,1
				steepBumpMapOffset = 0,0
				steepNearTiling = 250
				steepTiling = 50
				lowTex = BUILTIN/eveLowSand_diffuse
				lowTexScale = 1,1
				lowTexOffset = 0,0
				lowTiling = 38000
				midTex = JoolSurface/joolgravel
				midTexScale = 1,1
				midTexOffset = 0,0
				midTiling = 250000
				midBumpMap = JoolSurface/joolgravel_nrm
				midBumpMapScale = 1,1
				midBumpMapOffset = 0,0
				midBumpTiling = 250000
				highTex = BUILTIN/MohoMid
				highTexScale = 1,1
				highTexOffset = 0,0
				highTiling = 100000
				lowStart = 0
				lowEnd = 0.3
				highStart = 0.8
				highEnd = 1
				globalDensity = 1
				fogColorRamp = BUILTIN/purple_atmogradiant
				fogColorRampScale = 1,1
				fogColorRampOffset = 0,0
				planetOpacity = 1
				oceanFogDistance = 1000
			}
			Mods
			{
	HeightColorMap
{
	blend = 1
	enabled = true
	order = 200 //make this number higher than the HeightMods
	LandClasses
	{
		Class
		{
			name = Flat
			altitudeStart = 0
			altitudeEnd = 0.1
			color = 0.8,0.8,0.8,1.0
			lerpToNext = true
		}
		Class
		{
			name = Steep
			altitudeStart = 0.1
			altitudeEnd = 0.6
			color = 0.5,0.5,0.6,1.0
			lerpToNext = true
		}
		Class
		{
			name = Peak
			altitudeStart = 0.8
			altitudeEnd = 2
			color = 0.25,0.5,0.0,1.0
			lerpToNext = false
		}
	}
}
				VertexVoronoi
				{
					deformation = 10000
					displacement = 0.15
					enableDistance = True
					frequency = 60
					seed = 757575757
					order = 15
					enabled = True
					name = VertexVoronoi1
				}
				VertexVoronoi
				{
					deformation = 10000
					displacement = 0.20
					enableDistance = True
					frequency = 120
					seed = 757575757
					order = 15
					enabled = True
					name = VertexVoronoi2
				}
				VertexVoronoi
				{
					deformation = 10000
					displacement = 0.25
					enableDistance = True
					frequency = 180
					seed = 757575757
					order = 15
					enabled = True
					name = VertexVoronoi3
				}
				FlattenOcean
				{
					oceanRadius = 17
					order = 100
					enabled = True
					name = flats18
				}
				VertexHeightNoiseVertHeightCurve2
				{
					deformity = 1000
					ridgedAddFrequency = 12
					ridgedAddLacunarity = 2
					ridgedAddOctaves = 4
					ridgedAddSeed = 24562654
					ridgedMode = Low
					ridgedSubFrequency = 12
					ridgedSubLacunarity = 2
					ridgedSubOctaves = 4
					ridgedSubSeed = 73547
					simplexFrequency = 12
					simplexHeightEnd = 100000
					simplexHeightStart = 500
					simplexOctaves = 4
					simplexPersistence = 0.7
					simplexSeed = 2353626
					order = 20
					enabled = True
					name = VertexHeightNoiseVertHeightCurve2
				}
				VertexSimplexHeight
				{
					deformity = 800
					frequency = 6
					octaves = 8
					persistence = 0.4
					seed = 34545872
					order = 21
					enabled = True
					name = VertexSimplexHeight
				}
			}
		}
		Atmosphere
		{
			staticPressureASL = 101.325
			enabled = True // Whether the body has an atmosphere.
			oxygen = False // Whether the atmosphere contains oxygen.
			staticDensityASL = 6.70262205528434 // Atmospherical density at sea level. Used to calculate the parameters of the atmosphere if no curves are used.
			adiabaticIndex = 1.43
			maxAltitude = 200000 // The height of the atmosphere.
			gasMassLapseRate = 2.07657256052129
			atmosphereMolarMass = 0.0022
			pressureCurveIsNormalized = False // Whether the pressure curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values.
			temperatureCurveIsNormalized = False // Whether the temperature curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values.
			temperatureLapseRate = 0.001
			temperatureSeaLevel = 200 // The static temperature at sea level. Used to calculate the parameters of the atmosphere if no curves are used.
			ambientColor = 0.0754820928,0.208955199,0.0686121732,1 // All objects inside of the atmosphere will slightly shine in this color.
			lightColor = 0.826923311,0.771367967,0.856837809,1
			addAFG = True
			pressureCurve // Assigns a pressure value to a height value inside of the atmosphere.
			{
				key = 0 5066.25 0 -0.6723968
				key = 10000 1519.875 -0.1346587 -0.1346587
				key = 29000 628.0436 -0.01449255 -0.01449255
				key = 123450 22.26 -0.001562163 -0.001562163
				key = 150000 2 -0.0001361465 -0.0001361465
				key = 170000 0.1 -1.001277E-05 -1.001277E-05
				key = 200000 0 0 0
			}
			temperatureCurve // Assigns a temperature value to a height value inside of the atmosphere.
			{
				key = 0 200 0 -0.001182922
				key = 29000 165 -0.001207278 -0.001207278
				key = 123450 120 0 0
				key = 168000 160 0.0009967944 0.0009967944
				key = 187500 175 0 0
				key = 194000 167 0 0
				key = 200000 350 0.08717471 0
			}
			temperatureSunMultCurve
			{
				key = 0 0 0 0
				key = 29000 0.5 0 0
				key = 123450 0.8 0 0
				key = 200000 1.5 0 0
			}
			temperatureLatitudeBiasCurve
			{
				key = 0 30 0 -0.0957164
				key = 50 10 -0.950278 -0.950278
				key = 70 -20 -1.955704 -1.955704
				key = 90 -40 -0.02418368 0
			}
			temperatureLatitudeSunMultCurve
			{
				key = 0 9 0 0.02746098
				key = 40 12 0.2295445 0.2295445
				key = 65 18 0 0
				key = 90 5 0 0
			}
			temperatureAxialSunBiasCurve
			{
				key = 0 0 0 0
			}
			temperatureAxialSunMultCurve
			{
				key = 0 0 0 0
			}
			temperatureEccentricityBiasCurve
			{
				key = 0 0 0 0
			}
			AtmosphereFromGround // The atmosphere effect that is seen on the horizon.
			{
				DEBUG_alwaysUpdateAll = False // Whether all parameters should get recalculated and reapplied every frame.
				doScale = True // Whether the atmosphere mesh should be scaled automatically.
				innerRadius = 5996250 // The lower bound of the atmosphere effect.
				invWaveLength = 4.83110952,7.92111492,1.90687299,0.5
				outerRadius = 6150000 // The upper bound of the atmosphere effect.
				samples = 4
				transformScale = 1.02499998,1.02499998,1.02499998 // The scale of the atmosphere mesh in all three directions. Automatically set if doScale is enabled.
				waveLength = 0.674509823,0.596078455,0.850980401,0
				outerRadiusMult = 1.025 // A multiplier that automatically sets outerRadius based on the planets radius.
				innerRadiusMult = 0.975 // A multiplier that automatically sets innerRadius based on the planets radius.
			}
		}
	}
}
